
--TRANSACTION NHẬP HÀNG-------------------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_NHAP_HANG
    (MA_VAT_TU IN VARCHAR2,
    SO_LUONG_NHAP IN NUMBER,
    MA_NHAN_VIEN IN VARCHAR2,
    MA_NHA_CUNG_CAP IN VARCHAR2,
    MA_GIAO_DICH IN VARCHAR2,
    MA_NHA_VAN_CHUYEN IN VARCHAR2)
IS
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
BEGIN
    COMMIT;

    --CHỜ 5S
    SELECT SOLUONG INTO SO_LUONG_HIEN_CO
    FROM VATTU
    WHERE MAVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    SAVEPOINT BEFORE_INSERT;

    --THÊM GIAO DỊCH NHẬP HÀNG
    UPDATE VATTU
    SET SOLUONG = SO_LUONG_HIEN_CO + SO_LUONG
    WHERE MAVT = MA_VAT_TU;
    INSERT INTO GIAODICH(MAGD,LOAIGD, MaNVC, MaNV) VALUES(MA_GIAO_DICH,'NHAP', MA_NHA_VAN_CHUYEN, MA_NHAN_VIEN);
    INSERT INTO CT_NHAP(MaGD, MaVT, SL, MaNCC) VALUES(MA_GIAO_DICH, MA_VAT_TU, SO_LUONG, MA_NHA_CUNG_CAP);

    COMMIT;

    EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE  = -60 THEN --DEADLOCK XẢY RA
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20002, "Deadlock");
            
        ELSE
            ROLLBACK TO BEFORE_INSERT;
        END IF;
END TRANSACTION_NHAP_HANG;

--TRANSACTION XUẤT HÀNG------------------------------------------------------------
CREATE PROCEDURE TRANSACTION_XUAT_HANG
    (MA_VAT_TU IN VARCHAR2,
    SO_LUONG_XUAT IN NUMBER,
    MA_NHAN_VIEN IN VARCHAR2,
    MA_KHACH_HANG IN VARCHAR2,
    MA_GIAO_DICH IN VARCHAR2,
    MA_NHA_VAN_CHUYEN IN VARCHAR2)
IS
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SO_LUONG_HIEN_CO NUMBER;
DON_GIA_XUAT NUMBER;
THANH_TIEN NUMBER:=0;

BEGIN
    COMMIT; 
    --LẤY ĐƠN GIÁ XUẤT VÀ SỐ LƯỢNG HIỆN CÓ

    --CHỜ 5S
    SELECT DONGIAXUAT, SOLUONG INTO DON_GIA_XUAT, SO_LUONG_HIEN_CO
    FROM VATTU
    WHERE MAVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    --KẾT THÚC NẾU KHÔNG ĐỦ SỐ LƯỢNG
    IF SO_LUONG_HIEN_CO < SO_LUONG_XUAT THEN
    RAISE_APPLICATION_ERROR(-20001, 'Không đủ hàng để xuất');
    END IF;

    SAVEPOINT BEFORE_INSERT;

    --THÊM GIAO DỊCH XUẤT HÀNG
    THANH_TIEN:=DON_GIA_XUAT*SO_LUONG_XUAT;
    UPDATE VATTU
    SET SOLUONG = SO_LUONG_HIEN_CO - SO_LUONG_XUAT
    WHERE MAVT = MA_VAT_TU;
    INSERT INTO GIAODICH(MAGD,LOAIGD, MaNVC, MaNV) VALUES(MA_GIAO_DICH,'XUAT', MA_NHA_VAN_CHUYEN, MA_NHAN_VIEN);
    INSERT INTO CT_XUAT VALUES(MA_GIAO_DICH,MA_VAT_TU, SO_LUONG, THANH_TIEN, MA_KHACH_HANG);

    COMMIT;

    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE  = -60 THEN --DEADLOCK XẢY RA
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20002, "Deadlock");
                
            ELSE
                ROLLBACK TO BEFORE_INSERT;
            END IF;
END TRANSACTION_XUAT_HANG;



--TRANSACTION HỦY GIAO DỊCH----------------------------------------------
CREATE PROCEDURE TRANSACTION_HUY_GIAO_DICH
    (MA_GIAO_DICH IN VARCHAR2,
    MA_VAT_TU IN VARCHAR2
    )
IS
--SET TRANSACTION NAME "HUY_GIAO_DICH";
LOAI_GIAO_DICH VARCHAR2(10);
BEGIN
    COMMIT;

    SELECT LOAIGD INTO LOAI_GIAO_DICH 
    FROM GIAODICH 
    WHERE MAGD = MA_GIAO_DICH
    FOR UPDATE WAIT 5;

    SAVEPOINT BEFORE_DELETE;

    --NẾU LÀ GIAO DỊCH NHẬP
    IF LOAI_GIAO_DICH = 'Nhap' THEN
    UPDATE VATTU
    SET SOLUONG = SOLUONG - (SELECT SL FROM CT_NHAP WHERE MA_GIAO_DICH = MAGD)
    WHERE MA_VAT_TU = MAVT;

    DELETE FROM CT_NHAP WHERE MAGD = MA_GIAO_DICH;
    END IF;

    --NẾU LÀ GIAO DỊCH XUẤT
    IF LOAI_GIAO_DICH = 'Xuat' THEN
    UPDATE VATTU
    SET SOLUONG = SOLUONG + (SELECT SL FROM CT_XUAT WHERE MA_GIAO_DICH = MAGD)
    WHERE MA_VAT_TU = MAVT;

    DELETE FROM CT_XUAT WHERE MAGD = MA_GIAO_DICH;
    END IF;

    --XÓA GIAO DỊCH KHỎI BẢNG GIAO DỊCH;
    DELETE FROM GIAODICH WHERE MAGD = MA_GIAO_DICH;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE = -60 THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20003, 'Deadlock');
            ELSE
                ROLLBACK TO BEFORE_DELETE;
                RAISE;
            END IF;
END TRANSACTION_HUY_GIAO_DICH;


--TRANSACTION THAY DOI GIA----------------------------------------------

CREATE PROCEDURE TRANSACTION_THAY_DOI_GIA
(MA_LICH_SU_CAP_NHAT_GIA IN VARCHAR2,
MA_VAT_TU IN VARCHAR2,
GIA_MOI IN NUMBER)
IS
GIA_CU NUMBER;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

BEGIN
    COMMIT;

    SELECT DONGIAXUAT INTO GIA_CU
    FROM VATTU
    WHERE MAVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    SAVEPOINT BEFORE_UPDATE;
    IF GIA_CU != GIA_MOI THEN
    UPDATE VATTU
    SET DONGIAXUAT = GIA_MOI;
    WHERE MAVT = MA_VAT_TU

    INSERT INTO LICHSUCAPNHAT(MALSCN, MAVT, GIACU, GIAMOI)
    VALUES(MA_LICH_SU_CAP_NHAT_GIA, MA_VAT_TU, GIA_CU, GIA_CU, GIA_MOI);
    COMMIT;

    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE = -60 THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20004, 'Deadlock');
            ELSE
                ROLLBACK TO BEFORE_UPDATE;
                RAISE;
            END IF;
END TRANSACTION_THAY_DOI_GIA;

--TRANSACTION KIỂM KÊ SỐ LƯỢNG--------------------------------------------------------
CREATE PROCEDURE TRANSACTION_KIEM_KE
(MA_LICH_SU_KIEM_KE IN VARCHAR2,
MA_NHAN_VIEN IN NUMBER,
MA_VAT_TU IN NUMBER
SO_LUONG_KIEM_KE IN NUMBER
TINH_TRANG IN VARCHAR2)
IS
SO_LUONG_CON_LAI NUMBER;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

BEGIN
    COMMIT;

    SELECT SoLuong INTO SO_LUONG_CON_LAI
    FROM VATTU
    WHERE MaVT = MA_VAT_TU
    FOR UPDATE WAIT 5;

    SAVEPOINT BEFORE_KIEMKE;

    INSERT INTO LichSuKiemKe (MaNV, MaVT, SoLuongConLai, TinhTrang)
    VALUES (MA_NV, MA_VT, SO_LUONG_KIEM_KE, TINH_TRANG);

    --NẾU CÓ CHÊNH LỆCH CẬP NHẬT LẠI SỐ LƯỢNG
    IF SO_LUONG_CON_LAI != SO_LUONG_KIEM_KE THEN
        UPDATE VATTU
        SET SoLuong = SO_LUONG_KIEM_KE
        WHERE MaVT = MA_VAT_TU;
    END IF;

    COMMIT;

    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE = -60 THEN
                ROLLBACK;
                RAISE_APPLICATION_ERROR(-20004, 'Deadlock');
            ELSE
                ROLLBACK TO BEFORE_KIEMKE;
                RAISE;
            END IF;
END TRANSACTION_KIEM_KE;

--TRANSACTION CẬP NHẬT VỊ TRÍ VÀ LƯƠNG NHÂN VIÊN---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE TRANSACTION_CAP_NHAT_NHAN_VIEN (
    MA_NHAN_VIEN IN NUMBER,
    CHUC_VU_MOI IN VARCHAR2,
    LUONG_MOI IN NUMBER
)
IS
BEGIN
    SAVEPOINT BEFORE_UPDATE;

    -- Cập nhật thông tin nhân viên
    UPDATE NHANVIEN
    SET ChucVu = CHUC_VU_MOI,
        Luong = LUONG_MOI,
    WHERE MANV = MA_NHAN_VIEN;

    -- Kiểm tra có ai bị ảnh hưởng không
    IF SQL%ROWCOUNT = 0 THEN
        RAISE_APPLICATION_ERROR(-20010, 'Không tìm thấy nhân viên để cập nhật');
    END IF;

    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK TO BEFORE_UPDATE;
        RAISE_APPLICATION_ERROR(SQLERRM);
END TRANSACTION_CAP_NHAT_NHAN_VIEN;