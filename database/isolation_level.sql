
-- 1. Nhap hang

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

DECLARE
    MA_GIAO_DICH NUMBER := 1;
    MA_VAT_TU NUMBER := 101;
    SO_LUONG NUMBER := 10;
    MA_NHAN_VIEN NUMBER := 201;
    MA_NHA_CUNG_CAP NUMBER := 301;
BEGIN
    INSERT INTO GIAODICH(MAGD, LOAIGD) VALUES(MA_GIAO_DICH, 'Nhap');
    INSERT INTO CT_NHAP VALUES(MA_GIAO_DICH, MA_VAT_TU, SO_LUONG, MA_NHAN_VIEN, 0, MA_NHA_CUNG_CAP);
    UPDATE VATTU SET SOLUONG = SOLUONG + SO_LUONG WHERE MAVT = MA_VAT_TU;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/


-- 2. Xuat hang

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

DECLARE
    MA_GIAO_DICH NUMBER := 2;
    MA_VAT_TU NUMBER := 101;
    SO_LUONG_XUAT NUMBER := 5;
    MA_NHAN_VIEN NUMBER := 202;
    MA_KHACH_HANG NUMBER := 303;
    DON_GIA_XUAT NUMBER;
    SO_LUONG_HIEN_CO NUMBER;
    THANH_TIEN NUMBER;
BEGIN
    SELECT DONGIAXUAT, SOLUONG INTO DON_GIA_XUAT, SO_LUONG_HIEN_CO 
    FROM VATTU WHERE MAVT = MA_VAT_TU;

    IF SO_LUONG_HIEN_CO < SO_LUONG_XUAT THEN
        RAISE_APPLICATION_ERROR(-20001, 'Không đủ hàng để xuất');
    END IF;

    THANH_TIEN := DON_GIA_XUAT * SO_LUONG_XUAT;

    INSERT INTO GIAODICH(MAGD, LOAIGD) VALUES(MA_GIAO_DICH, 'Xuat');
    INSERT INTO CT_XUAT VALUES(MA_GIAO_DICH, MA_VAT_TU, SO_LUONG_XUAT, MA_NHAN_VIEN, THANH_TIEN, MA_KHACH_HANG);
    UPDATE VATTU SET SOLUONG = SO_LUONG_HIEN_CO - SO_LUONG_XUAT WHERE MAVT = MA_VAT_TU;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/


-- 3. Huy giao dich

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

DECLARE
    MA_GIAO_DICH NUMBER := 1;
    MA_VAT_TU NUMBER := 101;
    LOAI_GIAO_DICH VARCHAR2(10);
    SL NUMBER;
BEGIN
    SELECT LOAIGD INTO LOAI_GIAO_DICH FROM GIAODICH WHERE MAGD = MA_GIAO_DICH;

    IF LOAI_GIAO_DICH = 'Nhap' THEN
        SELECT SL INTO SL FROM CT_NHAP WHERE MAGD = MA_GIAO_DICH AND MAVT = MA_VAT_TU;
        UPDATE VATTU SET SOLUONG = SOLUONG - SL WHERE MAVT = MA_VAT_TU;
        DELETE FROM CT_NHAP WHERE MAGD = MA_GIAO_DICH;
    ELSIF LOAI_GIAO_DICH = 'Xuat' THEN
        SELECT SL INTO SL FROM CT_XUAT WHERE MAGD = MA_GIAO_DICH AND MAVT = MA_VAT_TU;
        UPDATE VATTU SET SOLUONG = SOLUONG + SL WHERE MAVT = MA_VAT_TU;
        DELETE FROM CT_XUAT WHERE MAGD = MA_GIAO_DICH;
    END IF;

    DELETE FROM GIAODICH WHERE MAGD = MA_GIAO_DICH;
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

-- 4. Lay thong tin nhanh

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;

DECLARE
    TONG_VATTU NUMBER;
BEGIN
    SELECT COUNT(*) INTO TONG_VATTU FROM VatTu;
    DBMS_OUTPUT.PUT_LINE('Tổng vật tư: ' || TONG_VATTU);
    COMMIT;
END;
/

-- 5. Cap nhat gia vat tu 

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

DECLARE
    MA_VAT_TU NUMBER := 101;
    GIA_MOI NUMBER := 18000;
    GIA_CU NUMBER;
BEGIN
    SELECT DonGiaNhap INTO GIA_CU FROM VatTu WHERE MaVT = MA_VAT_TU;

    IF GIA_CU != GIA_MOI THEN
        INSERT INTO LichSuCapNhat (MaVT, GiaCu, GiaMoi)
        VALUES (MA_VAT_TU, GIA_CU, GIA_MOI);

        UPDATE VatTu SET DonGiaNhap = GIA_MOI WHERE MaVT = MA_VAT_TU;
    END IF;

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/

-- 7. Kiem ke so luong ton kho 

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

DECLARE
    MA_NV NUMBER := 301;
    MA_VT NUMBER := 101;
    SL_HIEN_CO NUMBER;
BEGIN
    SELECT SoLuong INTO SL_HIEN_CO FROM VatTu WHERE MaVT = MA_VT;

    INSERT INTO LichSuKiemKe (MaNV, MaVT, TinhTrang)
    VALUES (MA_NV, MA_VT, 'Số lượng hiện tại: ' || SL_HIEN_CO);

    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;
/



